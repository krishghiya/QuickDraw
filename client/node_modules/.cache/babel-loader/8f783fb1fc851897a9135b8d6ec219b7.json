{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Checkout\\\\Documents\\\\Projects\\\\QuickDraw\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport CanvasDraw from 'react-canvas-draw';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sendData(data) {\n  axios.post('http://localhost:8000/data/', {\n    lines: data\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  });\n}\n\nfunction App() {\n  _s();\n\n  const [color, setColor] = useState('black');\n  const [saveableCanvas, setsaveableCanvas] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Quick Draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n        className: \"canvas\",\n        ref: canvasDraw => setsaveableCanvas(canvasDraw),\n        onChange: () => setColor(\"#\" + Math.floor(Math.random() * 16777215).toString(16)),\n        brushColor: color,\n        hideGrid: true,\n        brushRadius: 2,\n        lazyRadius: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendData(saveableCanvas.getSaveData()),\n        children: \"Predict Doodle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveableCanvas.clear(),\n        children: \"Clear Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PjY25+61zAxmL/jMKv5T0/eU5+c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Checkout/Documents/Projects/QuickDraw/client/src/App.js"],"names":["CanvasDraw","useState","axios","sendData","data","post","lines","headers","then","res","console","log","App","color","setColor","saveableCanvas","setsaveableCanvas","canvasDraw","Math","floor","random","toString","getSaveData","clear"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,mBAAvB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtBF,EAAAA,KAAK,CAACG,IAAN,CAAW,6BAAX,EAA0C;AACxCC,IAAAA,KAAK,EAAEF;AADiC,GAA1C,EAEG;AACDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADR,GAFH,EAMGC,IANH,CAMQC,GAAG,IAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACD,GATD;AAUD;;AAED,SAASG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,GAAG,EAAEgB,UAAU,IAAID,iBAAiB,CAACC,UAAD,CAFtC;AAGE,QAAA,QAAQ,EAAE,MAAMH,QAAQ,CAAC,MAAMI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAP,CAH1B;AAIE,QAAA,UAAU,EAAER,KAJd;AAKE,QAAA,QAAQ,EAAE,IALZ;AAME,QAAA,WAAW,EAAE,CANf;AAOE,QAAA,UAAU,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAkBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMV,QAAQ,CAACY,cAAc,CAACO,WAAf,EAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMP,cAAc,CAACQ,KAAf,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/BQX,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import CanvasDraw from 'react-canvas-draw'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction sendData(data) {\r\n  axios.post('http://localhost:8000/data/', {\r\n    lines: data\r\n  }, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then(res => {\r\n    console.log(res);\r\n    return res;\r\n  })\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [color, setColor] = useState('black')\r\n  const [saveableCanvas, setsaveableCanvas] = useState(null)\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <h1>\r\n          Welcome to Quick Draw!\r\n        </h1>\r\n        <div className='details'>\r\n          <CanvasDraw \r\n            className='canvas'\r\n            ref={canvasDraw => setsaveableCanvas(canvasDraw)}\r\n            onChange={() => setColor(\"#\" + Math.floor(Math.random() * 16777215).toString(16))}\r\n            brushColor={color}\r\n            hideGrid={true}\r\n            brushRadius={2}\r\n            lazyRadius={0}\r\n          />\r\n          <ol>\r\n            \r\n          </ol>\r\n        </div>\r\n        <div className='button'>\r\n          <button onClick={() => sendData(saveableCanvas.getSaveData())}>Predict Doodle</button>\r\n          <button onClick={() => saveableCanvas.clear()}>Clear Screen</button>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}